{"version":3,"sources":["util.js"],"names":[],"mappings":";;;;AAAA,QAAQ,gBAAR;AACA,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,SAAS,QAAQ,QAAR,CAAT;;AAEJ,IAAM,UAAU,SAAV,OAAU;SAAM;CAAN;;AAEhB,IAAI,aAAa,SAAb,UAAa,GAAW;AAC1B,MAAI,KAAJ,CAD0B;;AAG1B,SAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC3C,YAAQ,mDAAR,EAA6D,UAAS,KAAT,EAAgB,QAAhB,EAA0B,IAA1B,EAAgC;AAC3F,cAAQ,IAAR,CAD2F;;AAG3F,cAAQ,KAAR,EAH2F;KAAhC,CAA7D,CAD2C;GAA1B,CAAnB,CAH0B;CAAX;;AAYjB,IAAI;sDAAU;QACR;;;;;;mBAAc;;;AAAd;6CACG;;;;;;;;GAFK;;kBAAV;;;GAAJ;;AAKA,IAAI,cAAc,SAAd,WAAc,GAAW;AAC3B,SAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAAyB;AAC1C,YAAQ,+BAAR,EAAyC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAAyB;AAChE,cAAQ,IAAR,EADgE;KAAzB,CAAzC,CAD0C;GAAzB,CAAnB,CAD2B;CAAX;;AAQlB,IAAI;sDAAW;QACT;;;;;;mBAAiB;;;AAAjB;8CACG;;;;;;;;GAFM;;kBAAX;;;GAAJ;;;AAOA,IAAI,WAAW,SAAX,QAAW,CAAS,QAAT,EAAkB;AAC/B,MAAI,IAAJ,CAD+B;AAE/B,SAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAAyB;AAC1C,WAAO,OAAP,CAAe,EAAf,EAAmB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACrC,aAAO,IAAP,CAAY,QAAZ,EAAsB,IAAtB,EAA4B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC5C,gBAAQ,IAAR,EAD4C;OAApB,CAA5B,CADqC;KAApB,CAAnB,CAD0C;GAAzB,CAAnB,CAF+B;CAAlB;;AAYf,IAAI,gBAAgB,SAAhB,aAAgB,GAAU;AAC5B,MAAI,WAAW,sBAAX,CADwB;AAE5B,MAAI,WAAW,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAAX,CAFwB;AAG5B,MAAI,OAAO,EAAP,CAHwB;AAI5B,KAAE;AACA,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,CAAJ,EAAO,GAAvB,EAA2B;AACzB,cAAQ,SAAS,MAAT,CAAgB,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,SAAS,MAAT,CAA3C,CAAR,CADyB;KAA3B;GADF,QAIQ,SAAS,OAAT,CAAiB,IAAjB,KAA0B,CAAC,CAAD,EARN;AAS5B,SAAO,IAAP,CAT4B;CAAV;;AAYpB,IAAI,cAAc,SAAS,cAAT,CAAwB,MAAxB,CAAd;;AAEJ,IAAI;sDAAU;QACR,OAGA,OAEA;;;;;AALA,oBAAQ;;AACZ,qBAAS,kBAAkB,SAAlB,GAA8B,MAA9B;AACT,qBAAS,4BAA4B,eAA5B,GAA8C,MAA9C;;mBACS;;;AAAd;;AACJ,qBAAS,sBAAsB,KAAtB,GAA8B,MAA9B;;mBACY;;;AAAjB;;AACJ,qBAAS,uBAAuB,QAAvB,GAAkC,MAAlC;AACT,wBAAY,SAAZ,GAAwB,KAAxB;;;;;;;;GARY;;kBAAV;;;GAAJ","file":"app.js","sourcesContent":["require(\"babel-polyfill\");\nvar request = require('request');\nvar bcrypt = require('bcrypt');\n\nconst es6Test = () => \"yes\";\n\nvar getSwanson = function() {\n  var quote;\n \n  return new Promise(function(resolve, reject) {\n    request('http://ron-swanson-quotes.herokuapp.com/v2/quotes', function(error, response, body) {\n      quote = body;\n \n      resolve(quote);\n    });\n  });\n}\n \nvar swanson = async function() {\n  var quote = await getSwanson();\n  return quote;\n}\n\nvar getJeopardy = function (){\n  return new Promise(function(resolve, reject){\n    request('http://jservice.io/api/random', function (err, res, body){\n      resolve(body); \n    });\n  });\n}\n\nvar jeopardy = async function(){\n  var question = await getJeopardy();\n  return(question);\n}\n\n\n// encryption\nvar makeHash = function(password){\n  var hash;\n  return new Promise(function(resolve, reject){\n    bcrypt.genSalt(10, function(err, salt) {\n      bcrypt.hash(password, salt, function(err, hash) {\n          resolve(hash);\n      });\n    });\n  })\n}\n\n\nvar codeGenerator = function(){\n  let possible = \"BCDFGHJKLMNPQRSTVWXZ\";\n  let badWords = ['NGGR', 'NGRR', 'NNGR', 'CVNT', 'FVCK', 'SHJT', 'TWNK'];\n  let code = \"\";\n  do{\n    for (let i = 0; i < 4; i++){\n      code += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n  } while(badWords.indexOf(code) != -1);\n  return code; \n};\n\nvar mainElement = document.getElementById('main'); \n\nvar doStuff = async function(){\n  var stuff = \"\"\n  stuff += \"<p>ES6 Test: \" + es6Test() + \"</p>\"; \n  stuff += \"<p>CodeGenerator Test: \" + codeGenerator() + \"</p>\"; \n  var quote = await swanson(); \n  stuff += \"<p>Swanson Test: \" + quote + \"</p>\"; \n  var question = await jeopardy(); \n  stuff += \"<p>jeopardy Test: \" + question + \"</p>\"; \n  mainElement.innerHTML = stuff; \n}"],"sourceRoot":"/source/"}